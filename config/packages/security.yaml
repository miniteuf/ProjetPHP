security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        user:
            entity:
                class: App\Entity\User
                property: email

                
    encoders:
        App\Entity\User:
            algorithm: bcrypt
            hash_algorithm: sha512
      
    role_hierarchy:
        # un membre avec le ROLE_ADMIN aura également le ROLE_USER
        ROLE_ADMIN: ROLE_USER
        # Le ROLE_SUPER_ADMIN avec le ROLE_ALLOWED_TO_SWITCH qui permet de s'authentifier en se faisant passer pour n'importe quel membre. Particulièrement utile pour débugger son code.
        ROLE_SUPER_ADMIN: [ROLE_USER, ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]   
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
      
        main:
            anonymous: true
            lazy: true
            provider: user
            guard:
                authenticators:
                    - App\Security\LoginFormAuthenticator
            switch_user: ~

            logout:
                path: logout
            form_login:
                login_path: login
                check_path: login
            remember_me:
                secret:   '%kernel.secret%'
                lifetime: 2592000 # 30 days in seconds
                # where to redirect after logout
                # target: app_any_route

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
         - { path: ^/admin, roles: ROLE_ADMIN }
         - { path: ^/profil, roles: ROLE_USER }
         - { path: ^/castings, roles: IS_AUTHENTICATED_FULLY }
